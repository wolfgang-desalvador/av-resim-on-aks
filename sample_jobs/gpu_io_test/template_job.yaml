apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: run-<UUID>
  name: run-<UUID>
spec:
  template:
    metadata:
      labels:
        app: run-<UUID>
    spec:
      initContainers:
      - name: init-folders
        image: alpine:latest
        command: ["mkdir", "-p", "/output/<UUID>", "&&", "mkdir", "-p", "/input/<UUID>"]
        volumeMounts:
        - mountPath: "/output"
          name: bloboutput
          readOnly: false
        - mountPath: "/input"
          name: blobinput
          readOnly: false
      containers:
      - name: run-<UUID>
        image: <ACR_NAME>.azurecr.io/test-io:latest
        args: ["/etc/scripts/generate.sh", "&&", "/etc/scripts/read.sh"]
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: "/output"
          name: bloboutput
          readOnly: false
          subPath: "<UUID>"
        - name: blobinput
          mountPath: "/runtime"
          readOnly: false
          subPath: "<UUID>"
      - name: samples-tf-mnist-demo
        image: mcr.microsoft.com/azuredocs/samples-tf-mnist-demo:gpu
        args: ["--max_steps", "500"]
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            nvidia.com/gpu: 1
      restartPolicy: Never
      tolerations:
      - key: "sku"
        operator: "Equal"
        value: "gpu"
        effect: "NoSchedule"
      - key: "kubernetes.azure.com/scalesetpriority"
        value: "spot"
        effect: "NoSchedule"
        operator: "Equal"
      volumes:
      - name: blobinput
        persistentVolumeClaim:
           claimName: pvc-blob-input
      - name: bloboutput
        persistentVolumeClaim:
           claimName: pvc-blob-output